# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- azure-pipelines

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '15d98759-2a3e-40e1-b9b2-8885932b64ff'
  imageRepository: 'awtylimitless'
  containerRegistry: 'awtylimitless.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/ClientServerContainer/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

services:
  nbadb:
    build: ./DatabaseServerContainer
    ports:
      - "4321:4321"
    volumes:
      - ./DatabaseServerContainer:/DatabaseServerContainer

  airflow_postgres:
    image: postgres:9.6.2
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - "airflow_dbdata:/var/lib/postgresql/data"
    ports:
      - "5432:5432"

  airflow_initdb:
    build: ./DataServerContainer
    depends_on:
      - airflow_postgres
      - nbadb
    volumes:
      - ./DataServerContainer/airflow.cfg:/usr/local/airflow/airflow.cfg
      - ./DataServerContainer/variables:/usr/local/airflow/variables
    command:
      - /bin/bash
      - -c
      - |
        airflow initdb
        if [[ -e /usr/local/airflow/variables/dev/all.json ]]; then
            airflow variables -i /usr/local/airflow/variables/dev/all.json
        fi
        # Enable this if you choose to have RBAC UI activated in the webserver
        # airflow create_user -r Admin -u airflow -e airflow@airflow.com -f Air -l Flow -p airflow

  airflow_webserver:
    build: ./DataServerContainer
    restart: always
    depends_on:
      - airflow_initdb
      - nbadb
    volumes:
      - ./DataServerContainer/airflow.cfg:/usr/local/airflow/airflow.cfg
      - ./DataServerContainer/dags:/usr/local/airflow/dags
      - ./DataServerContainer/plugins:/usr/local/airflow/plugins
    ports:
      - "8080:8080"
      - "4040:4040"
    command: webserver
    healthcheck:
      test: [ "CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]" ]
      interval: 30s
      timeout: 30s
      retries: 3

  dashboard:
    build: ./ClientServerContainer
    depends_on:
      - nbadb
      - airflow_webserver
    ports:
      - "8050:8050"
    volumes:
      - ./ClientServerContainer:/ClientServerContainer
